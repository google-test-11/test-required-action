name: 'Required: Workflow Security Scan'

on:
  pull_request:
    paths:
      - '.github/workflows/**/*.yml'
      - '.github/workflows/**/*.yaml'
      - '.github/actions/**/*.yml'
      - '.github/actions/**/*.yaml'
  workflow_dispatch:
    inputs:
      target_repo:
        description: 'Public repo to scan for testing (e.g., owner/repo)'
        required: true
        type: 'string'
      target_ref:
        description: 'The branch, tag, or SHA to checkout'
        required: false
        type: 'string'
        default: 'main'

jobs:
  workflow-scan:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout PR Code'
        if: "github.event_name == 'pull_request'"
        uses: 'actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955' # ratchet:actions/checkout@v4

      - name: 'Checkout Target Public Repo'
        if: "github.event_name == 'workflow_dispatch'"
        uses: 'actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955' # ratchet:actions/checkout@v4
        with:
          repository: '${{ github.event.inputs.target_repo }}'
          ref: '${{ github.event.inputs.target_ref }}'

      - name: 'Initialize CodeQL'
        uses: 'github/codeql-action/init@2d92b76c45b91eb80fc44c74ce3fce0ee94e8f9d' # ratchet:github/codeql-action/init@v3
        with:
          languages: 'actions'
          queries: 'security-extended'
          config: |
            name: "Inline workflow scan config"
            disable-default-queries: true
            query-filters:
              - include:
                  problem.severity:
                    - error
                  tags contain: security

      - name: 'Perform CodeQL Analysis'
        id: 'codeql_analysis'
        uses: 'github/codeql-action/analyze@2d92b76c45b91eb80fc44c74ce3fce0ee94e8f9d' # ratchet:github/codeql-action/analyze@v3
        with:
          upload: 'never'

      - name: 'Check for Vulnerabilities and Set Status'
        run: |
          SARIF_FILE="${{ steps.codeql_analysis.outputs.sarif-output }}/actions.sarif"

          if [ ! -f "$SARIF_FILE" ]; then
            echo "SARIF file not found at $SARIF_FILE"
            exit 1
          fi

          RESULT_COUNT=$(jq '.runs[0].results | length' "$SARIF_FILE")

          if [ "$RESULT_COUNT" -gt 0 ]; then
            echo "::error::CodeQL found $RESULT_COUNT potential vulnerabilities with criticality error."
            echo "---"
            jq -r '.runs[0].results[] | ("Rule ID: " + .ruleId + "\nMessage: " + .message.text + "\nFile: " + .locations[0].physicalLocation.artifactLocation.uri + "\nLine: " + (.locations[0].physicalLocation.region.startLine | tostring) + "\n---")' "$SARIF_FILE"
            exit 1
          else
            echo "No vulnerabilities found. Check passed."
          fi
